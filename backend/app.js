var createError = require('http-errors');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');

var indexRouter = require('./routes/index');

var app = express();

// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'jade');

app.use(logger('dev'));
app.use(express.json());
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(express.static(path.join(__dirname, 'public')));


// MONGOOSE
const mongoose = require('mongoose');
var db = require("./models")

//connect to mongoose database
//old mongoose connect code
// mongoose.connect("mongodb://localhost/roundup_db", { useNewUrlParser: true });

//use this code to work on heroku
var MONGODB_URI = process.env.MONGODB_URI || "mongodb://localhost/roundup_db";
mongoose.connect(MONGODB_URI);


//===============DUMMY DATA FOR MONGO DB...MAY NOT NEED ===========================
dummyUser = {
  //id auto generated by mongoose?
  username: "buckt123",
  firstname: "Buck",
  lastname: "Thought",
  password: "pass12345",
  plaid: "account1",
  currentBalance: 30
}
dummyItem = {
  //item id auto gen by mongoose?
  itemName: "Fire TV Stick 4K with all-new Alexa Voice Remote, streaming media player",
  itemURL: "https://www.amazon.com/Introducing-Fire-TV-Stick-4K-with-All-New-Alexa-Voice-Remote/dp/B079QHML21/ref=sr_1_1?keywords=fire+stick&qid=1554065425&s=electronics&sr=1-1",
  itemPrice: "49.99",
  itemPhoto: "https://images-na.ssl-images-amazon.com/images/I/51CgKGfMelL._SL1000_.jpg"
  // userID: "" //will need to pass from user
}
dummyWithdrawal = {
  amount: 4.00,
  date: 1 / 4 / 2019,
  type: "purchase",
  notes: "hookers & blow",
  userID: ""
}
dummyDeposit = {
  amount: 5.00,
  date: 1 / 5 / 2019
}



// db.User.create(dummyUser).then(function (data) {
//   console.log(`user added ${dummyUser}`)
// }).catch(function (err) {
//   console.log(err.message)
// });

// db.Item.create(dummyItem).then(function (data) {
//   console.log(`Item added ${dummyItem}`)
// }).catch(function (err) {
//   console.log(err.message)
// });

// db.Withdrawal.create(dummyWithdrawal).then(function (data) {
//   console.log(`Withdrawal added ${dummyWithdrawal}`)
// }).catch(function (err) {
//   console.log(err.message)
// });

// db.Deposit.create(dummyDeposit).then(function (data) {
//   console.log(`Deposit added ${dummyDeposit}`)
// }).catch(function (err) {
//   console.log(err.message)
// });



// ROUTES
app.use('/', indexRouter);

// catch 404 and forward to error handler
app.use(function (req, res, next) {
  next(createError(404));
});

// error handler
app.use(function (err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

module.exports = app;
